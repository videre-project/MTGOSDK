<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net10.0-windows</TargetFramework>
    <LangVersion>Latest</LangVersion>
    <Nullable>enable</Nullable>
    <NoWarn>$(NoWarn);NUnit1033</NoWarn>
    <UseLocalFeed>false</UseLocalFeed>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <RestoreLockedMode>false</RestoreLockedMode>
    <RestorePackagesWithLockFile>false</RestorePackagesWithLockFile>
    <RestoreUseStaticGraphEvaluation>false</RestoreUseStaticGraphEvaluation>
  </PropertyGroup>

  <!-- NUnit Dependencies -->
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Logging" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="NUnit" />
    <PackageReference Include="NUnit.Analyzers" />
    <PackageReference Include="NUnit3TestAdapter" />
  </ItemGroup>

  <!-- Use the MTGOSDK package from the local feed if it exists -->
  <ItemGroup Condition="'$(UseLocalFeed)' == 'true'">
    <PackageReference Include="MTGOSDK" />
  </ItemGroup>
  <ItemGroup Condition="'$(UseLocalFeed)' != 'true'">
    <ProjectReference Include="$(SolutionDir)MTGOSDK\MTGOSDK.csproj" />
    <!-- Code Coverage -->
    <PackageReference Include="coverlet.msbuild" />
    <PackageReference Include="ReportGenerator" />
  </ItemGroup>

  <!-- Coverlet Report Generation -->
  <PropertyGroup>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>cobertura</CoverletOutputFormat>
    <DeterministicReport>true</DeterministicReport>
    <Include>
      [*]MTGOSDK.API.*
    </Include>
    <Exclude>
      [*]MTGOSDK.API.Events,
      [*]MTGOSDK.API.Interface.*,
      [*]MTGOSDK.API.Play.Games.*
    </Exclude>
    <ExcludeByAttribute>
      GeneratedCodeAttribute,
      RuntimeInternalAttribute
    </ExcludeByAttribute>
    <ExcludeByFile>
      **/*.g.cs;
      **/*.Version.cs
    </ExcludeByFile>
    <Threshold>50,50,50</Threshold>
    <ThresholdType>line,branch,method</ThresholdType>
  </PropertyGroup>

  <Target Name="GenerateHtmlCoverageReport"
          AfterTargets="GenerateCoverageResultAfterTest"
          Condition="'$(CoverletReport)' != ''">
    <ReportGenerator
      ReportFiles="@(CoverletReport)"
      TargetDirectory="$(MSBuildThisFileDirectory)html-coverage-report" />
  </Target>

  <!-- Cleanup Include/Exclude properties to remove line endings and spaces -->
  <PropertyGroup>
    <Include>$(Include.ReplaceLineEndings('').Replace(' ', ''))</Include>
    <Exclude>$(Exclude.ReplaceLineEndings('').Replace(' ', ''))</Exclude>
    <ExcludeByAttribute>$(ExcludeByAttribute.ReplaceLineEndings('').Replace(' ', ''))</ExcludeByAttribute>
    <ExcludeByFile>$(ExcludeByFile.ReplaceLineEndings('').Replace(' ', ''))</ExcludeByFile>
  </PropertyGroup>

</Project>